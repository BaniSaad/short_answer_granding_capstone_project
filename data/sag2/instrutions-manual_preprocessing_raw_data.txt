Detail on the onetime processing of SAG2 data to build the questions.csv and answer.csv files.


1. The original data files are broken into separate files for
    * Questions: data/ShortAnswerGrading_v2.0/data/sent/questions
    * Correct Answers: data/ShortAnswerGrading_v2.0/data/sent/answers
    * Scores: data/ShortAnswerGrading_v2.0/data/scores/1.1/ave.  (one file per question)
    * Answers: data/ShortAnswerGrading_v2.0/data/sent/1.1 (one file per question)

2. Combined the questions and answers into a single file: /data/sag2/questions.csv
    * Manually converted questions and answer files which were spaced seperated into csv format in an editor
    * Used Pandas to merge the two files into one.
        * questions = pd.read_csv('data/sag2/questions.csv', dtype={'id': str})
        * questions.set_index(‘id’)
        * answers = pd.read_csv('data/sag2/answers.csv', dtype={'id': str})
        * answers.set_index(‘id’)
        * qanda = pd.merge(questions, answers)
        * Deleted the working questions and answers separate files and replaced with combined file
        * qanda.to_csv('data/sag2/questions.csv', index=False)

3. Create a single data_file for answers. This includes questions_id, answer responses (sentences) and scores.
    * Wrote a script to read and concatenate the answers and scores using the names of the files (data/ShortAnswerGrading_v2.0/data/docs/files)
    * files = pd.read_csv('data/ShortAnswerGrading_v2.0/data/docs/files’, dtype={‘id’:str})
    * scores_df = pd.DataFrame(columns = [‘id’, ‘score’])
    * for id in files['id'].values:
    *     scores[’score’] = pd.read_csv(f"data/ShortAnswerGrading_v2.0/data/scores/{id}/ave”)[0]
    *     scores[‘id’] = id
    *     scores_df.append(scores, ignore_index=True)
    * answers = pd.read_csv('data/sag2/sent', header=None, dtype={'id':str})
    * answers['score'] = scores_df['score']
    * answers[‘correct] = answers[’score’] >= 4
    * answers.to_csv('data/sag2/answers.csv', index=False)
    * answers.groupby('correct')['score'].count()
        * correct
        * False     671
        * True     1771